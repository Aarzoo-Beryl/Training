----------------------------------------RAILS----------------------------------------------


RUBY ON RAILS - 
	- open source web application framework
	- written in RUBY
	- created in 2003 by DAVID HEINEMEIER HANSSON ['DHH']
	- released as open source in 2004


RAILS - 
	- set of web framework 
	  [framework => prewritten code and libraries that developer can use to handle common tasks and solve 
	  re-occuring problems]

	- follows DRY code (Don't repeat yourself)
	  [idea - every peice of information should be written only once and can be refered where ever needed]
	  [pros - concise,consistant and easily maintainable code]

	- follows Convention Over Configuration
	  [idea - rather than configuring again and again ,use pre configured functions with default setting for 
	  general purpose and if some specification neede the perconfigured function can be overwritten according 
	  to the preference]
	  [pros - speed up development process]
	
	- most coding done in app folder, config used to describe configurations like routes,database,etc.


MVC ARCHITECTURE - 
	- M - MODEL [refers to the data objects we use in the application]
	  V - VIEW [refers to presentation layer, how data is presented to the user]
	  C - CONTROLLER [processes and responds to user's events]

	- Basic Web Architecture 
	 	[BROWSER] <=> [PAGE] <=> [DATABASE]

	- MVC Web Architecture
		[BROWSER] <=> [CONTROLLER] <=> [MODEL] <=> [DATABASE]
		       ^\     /.
			     [VIEW]
		 - browser sends info to controller which fetched info from database through model
		 - once info recieved , the indo is sent to view by controller and is then finally displayed on browser

		 - here contoller (handles decisions) , model (handles data) , view (handles presentation)
		 - in RAILS , code library for controller -> ActionController , model -> ActiveRecord , view -> ActionView
		   [controller and view can be packed, as they are very related, into -> ActionPack]
	
INSTALLATION - 

	- $curl -sSL https://get.rvm.io -o rvm.sh
	- $less /tmp/rvm.sh
	- $cat /tmp/rvm.sh | bash -s stable --rails
	- $source /home/sammy/.rvm/scripts/rvm

NEW PROJECT - 

	- $rails new <project_name> -d <database_name>
	  [if run bundle install not working, open the project_name directory
		do - 
		$gem install pg
		$gem update --system
		$gem update bundler
		$bundle install			]

OPENING BROWSER - 

	- $rails server [or] $ rails s
	  [creates server]

CREATING BASIC DATABASE - 

	- $rails db:create
	  [creates necessary database]

GENEREATING CONTROLLER - 

	- $rails generate [or] $rails g
	  [tells us what all it can generate]

	- $rails generate controller
	  [asks us to provide more details and also provides us with options available]

	- $rails generate controller Demo index
	  [generate controller Demo and view index]
	  ['index' is basically a function/method that controller would perform and when put inside controller class it is called an action that controller will perform]
	
SERVER REQUEST HANDELING - 

	- Actual ROR Architecture - 
											(RAILS FRAMEWORK)		
		[BROWSER]<=>[WEB SERVER]<=>[PUBLIC]=>[ROUTER]
						^						|.
						|					[CONTROLLER]
						|				       |.    |.
						-------------------[VIEWS] [MODELS]<=>[DATABASE]

	- Newly added items - ROUTER and PUBLIC
	- the files in public directory can be directly accessed by anyone

ROUTES - 

	- when web server can't find the requested file in the public directory,then sends rewuest to routing portion of the framework,which further
	  examines what conroller and action to be called (done by using definitions of route.rb file present in config folder)
	- main point of rounting - to identify how a url string works
	
	- ROUTES TYPES - 
			- SIMPLE MATCH ROUTE - 
				- get 'demo/index'
				  [simply matches the controller and the action][mostly used]
			- DEFAULT MATCH ROUTE - 
				- basic structure - :controller/:action/:id
				- example - get ':controller(/:action(/:id))
				  [they act as variable name and help match pattern]
			- ROOT MATCH ROUTE - 
				- purpose - routes request to the controller when no controller or action is specified 
				- acts as a home page
				- syntax - root 'demo#index'
		























