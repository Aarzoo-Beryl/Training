--------------------------------------------HTML-----------------------------------------------------

HTML - refers to Hyper Text Markup Language 
     - the standard markup language for creating Web pages
     - HTML describes the structure of Web pages using markup
     - HTML elements are the building blocks of HTML pages

WEB BROWSER - pupose - to read and display HTML documents
            - doesn't display the HTML tags rather used them to determine how to display the content 

SAVING - extension - .html or .htm
       - encoding - UTF-8

BASIC - 
      - all documents must start with <!DOCTYPE HTML>
      - html documents must begin with <html> and end with </html>
      - visible parts must be in <body>.......</body>

    Basic tags - 
      - <!DOCTYPE HTML> - declares that the document is a HTML 5 document
                        - not case sensitive
      - <html> - root element of the webpage 
      - <head> - contains meta information about the document
      - <title> - the title of the document
      - <body> - contains the visible part of the page
      - <h1> - heading
      - <p> - paragraph
      - <br> - line break
      - <a> - anchor
      - <img> - image

    To view source code - eithrt CTRL+U or right-click+"view source code"
    To inspect HTML element - right-click+"inspect"

HTML ELEMENTS - refers to everything from start tag to end tag
              - tell the browser how to display the content
              - HTML elements usually come in pairs like <p>...</p>
              - the first tag is the start tag, the second tag is the end tag
              - the content is placed between the start and end tags
              - HTML elements are also called tags
              - elements can be nested i.e. an element can futher contain more elements
              - case insensitive i.e. <p> and <P> means same
              - empty elements - elements without a content i.e. <br> or <img>
              - self-closing tags - <br> or <img>
              - never skip ending tags

HTML ATTRIBUTES - all elements can have attributes except the empty ones
                - attributes provide additional information about the element
                - attributes are always specified in the start tag
                - attributes usually come in name/value pairs like name="value"
      Basic attributes - 
                - src - specifies the URL of the image
                - alt - specifies an alternate text for an image
                - href - specifies the URL of the page the link goes to
                - title - specifies extra information about an element
                - width - specifies the width of an image
                - height - specifies the height of an image
                - class - specifies one or more class names for an element
                - lang - used to declare the language of web page
                - style - used to add styles to an element
      Suggestions - 
                - use lowercase attribute names
                - use double quotes to delimit attribute values, can use single qoutes too
                - use the attribute name only once per start tag

HTML HEADING - refers to titles or subtitles that you want to display on webpage
             - <h1> to <h6> - six levels of headings
             - <h1> is the highest level and <h6> is the lowest level
    IMPORTANCE - search engine use heading to index the structure and content of your webpage
               - headings are used to specify the structure of the page  
    ATTRIBUTES - <style> - and css properties hel change how the heading looks

HTML PARAGRAPHS - defined by <p>
                - <p>...</p> - start and end tags
                - <p> - self-closing tag
                - a paragraph always starts from a new line and browser automatically adds some white spaces(margins) before and after paragraph
                - if adding additional white spaces and lines , browser automatically reoves them and displays the content inside as single paragraph without reserving them
                - to display the white spaces and lines as it is, use <pre>...</pre> instead of <p>...</p>
                - <pre>...</pre> - preserves all white spaces and lines as it is (solves poem problem)
    Horizontal rule - <hr> - defines the thematic break
                - used to separate content or define a change
                - <hr> - self-closing tag (empty tag)
                - used to add a horizontal line
    Line break  - <br> defines taht the line breaks here nd content after it start from a new line
                - <br> - self-closing tag (empty tag)
                - used to add a line break without starting a new line

HTML STYLES - <style> - used to add style to an element
                - it is an attribute used inside different tags that contain text to be displayed
                - contails different css properties and their values which enhance the look of the content
                - syntax - < tagname style="property:value;">
      CSS properties - 
                - background-color - defines background color
                - color - defines text color
                - font-family - defines font family
                - font-size - defines font size
                - font-weight - defines font weight
                - text-align - defines text alignment

HTML TEXT FORMATTING - contain several elements for definning texts with special meaning
      Formatting Elements - 
                - <b>	Defines bold text
                - <strong>	Defines important text(apprears as bold)
                - <em>	Defines emphasized text (screen reader will pronounce with emphasis,looks italic)
                - <i>	Defines a part of text in an alternate voice or mood
                - <small>	Defines smaller text
                - <sub>	Defines subscripted text
                - <sup>	Defines superscripted text
                - <ins>	Defines inserted text(underline)
                - <del>	Defines deleted text
                - <mark>	Defines marked/highlighted text 

HTML QUOTATION AND CITATION ELEMENTS - 
      - <abbr> - Defines an abbreviation or acronym
               - helps to give useful info to web-browser, translation systema nd search engine
               - <abbr title="World Health Organization">WHO</abbr>
               - when title used as an attribute inside, it causes to display of full form when mouse hovers above it
      - <address> -	Defines contact information for the author/owner of a document
               - this info can be email address, URL, physical address, phone number, contact details,etc.
               - text is rendered in italic and browser always adds a line before and after the element
      - <bdo>	- Defines the text direction
               - used to override the direction of the current direction of the text
               - <bdo dir="rtl">abcdef</bdo>
                 o/p - fedcba (changes direction from right to left) 
      - <blockquote> -	Defines a section that is quoted from another source
               - text is indented on the left and right sides
               - <blockquote cite="https://www.w3schools.com">content</blockquote>
      - <cite> -	Defines the title of a work
               - text is rendered in italic
               - <cite>the titanic</cite>
      - <q> -	Defines a short inline quotation
               - text is rendered in quotation marks
               - <q>the titanic</q>
                 o/p - "the titanic"

HTML COMMENTS - help to comment on defferent elements
              - <!-- comment --> - used to add comments to the HTML source code
              - the data inside it is not visible on the web browserbut it helps to structure the docuent better
              - it is useful for future reference and for other developers to understand the code
              - it is also useful for debugging the code
              - can be used to hide the content temporarily
              - multiline commit -  <!--
                                    this is 
                                    a multiline 
                                    comment
                                    -->
              - hide inline content - <p> Hello this is <!-- aarzoo --></p>

HTML COLORS - colors are specified with predefined color names or with RGB,HEX,RGBA,HSL or HSLA values
              - color names - red,blue,green,black,white,gray,silver
              - can be used to define color of background, text, border,etc.
              - color names are not case sensitive
    RGB - stands for red,green and blue
        - each defines the intensity of colora between 0-255
        - 0 is the lowest intensity(dark side) and 255 is the highest intensity (light side)
        - (255,0,0)- red, (0,255,0)- green, (0,0,255)- blue
        - (255,255,255)- white, (0,0,0)- black, (128,128,128)- gray
        - for shades of gray keep value of rgb equal
    RGBA - same as RGB but with an extra value for opacity
        - 0 is fully transparent and 1 is fully opaque
        - (255,0,0,0.5)- red with 50% opacity
    HEX - hexadecimal color values
        - 3 digit hex - #rgb
        - 6 digit hex - #rrggbb
        - 8 digit hex - #rrggbbaa
        - #ff0000 - red, #00ff00 - green, #0000ff- blue
        - #ffffff - white, #000000 - black, #808080 - gray
    HSL - stands for hue,saturation and lightness
        - hue - defines the color(0-red,120-green,240-blue)
        - saturation - defines the intensity of the color(0% shades of gray, 100% full color)
        - lightness - defines the brightness of the color(0% black, 100% white)
        - 0 is the lowest intensity(dark side) and 100 is the highest intensity 
        - (0,100,50)- red, (120,100,50)- green,(240,100,50)
        - (0,0,0)- black, (0,0,100)- white,
    HSLA - same as HSL but with an extra value for opacity
        - 0 is fully transparent and 1 is fully opaque
        - (0,100,50,0.5)- red with 50% opacity
        - (120,100,50,0.5)- green with 50% opacity
        - (240,100,50,0.5)- blue with 50% opacity
        - (0,0,0,0.5)- black with 50% opacity
        - (0,0,100,0.5)- white with 50% opacity
        - (0,0,50,0.5)- gray with 50% opacity

HTML STYLE(CSS) - helps to define styling of the elements of the document
        - can be used to define color,font size,font family,background color,etc.
        - can be used to define the style of the element in the HTML document
        - css- cascading style sheets (cascading- means style applied to parent will be child element within parent )
    Specifying css - 
        1.Inline - inside the element itself(<p style="color:blue">....</p>)
        2.Internal - inside the head of the document(<style>....</style>)[specified in <head>]
        3.External - in a separate file(.css) and linked to the document(<link rel="stylesheet" href=" ">)[inside <head>]
  
HTML LINKS - allows user to  click their way from page to page
        - can be used to link to another document,another part of the same document,or send email
        - link can be image,text,button or any other element
        - link can be internal or external
        - syntax - <a href="url"> text</a>        #text will be visible on the browser
        - href - stands for hypertext reference
        - url - stands for uniform resource locator
        - url can be absolute(full web address) or relative(without https://www part)
    target attribute - by default new pagewill be visible in the current web browser
        - target attribute can be used inside <a> tochange this default behaviour
        - target attribute can have following values
                - _self - default value
                - _blank - new page will be visible in new tab
                - _parent - new page will be visible in parent frame
                - _top - new page will be visible in top frame
    links can be - 
        - image - <a href=""><img src=""></a>
        - button - <a href=""><button>text</button></a> or js can be used as <button onclick="document.location='default'">txt</button>
        - email address - <a href="mailto:abc@xyz.com">Send mail</a>
        - titles - <a href="" tilte="">abc</a>
    link colors - 
        - defaults - 
                - a:link - blue and underlined text
                - a:visited - purple and underlined text
                - a:hover - red and underlined text
                - a:active - yellow and underlined text
        - custom styling using css - 
                eg - <style>
                        a:link {
                        color: green;
                        background-color: transparent;
                        text-decoration: none;
                        }

                        a:visited {
                        color: pink;
                        background-color: transparent;
                        text-decoration: none;
                        }

                        a:hover {
                        color: red;
                        background-color: transparent;
                        text-decoration: underline;
                        }

                        a:active {
                        color: yellow;
                        background-color: transparent;
                        text-decoration: underline;
                        }
                     </style>

        - changing for link as button - 
                eg - <style>
                        a:link, a:visited {
                        background-color: #f44336;
                        color: white;
                        padding: 15px 25px;
                        text-align: center;
                        text-decoration: none;
                        display: inline-block;
                        }

                        a:hover, a:active {
                        background-color: red;
                        }
                     </style>

    bookmark in html - useful when webpage is very long
        - <a href="#top">Back to top</a>
        - first create bookmark - <h2 id="C4">Chapter-4</h2>
        - then use <a href="#C4">Chapter-4</a> to link to that particular section of the page
        - <a href="#C4">Chapter-4</a> - this is called anchor

HTML IMAGES - helps to improve the design and apprearance of the webpages 
						- <img src="image.jpg" alt="image" width="500" height="500">
						- src - source of the image
						- alt - alternative text - if image is not available then this text will be displayed
						- width and height - size of the image(should use style method instead as it prevents any change due to  embedded or internal stylesheet)
						- to point to image on other server use absolute url
						- to point to image on same server use relative url
						- to point to image on same server but in different folder use relative url with folder name
						- can put animated gifs alsousing the same command
						- image floating - refers to alignment and wrapping of image with respect to text (<img src="image.gif" alt="image" style="flaot:right">)
		Image Maps - allows you to create clickable areas in image
			      - defined by <map>
						- <area> tag defines the clickable area as well as its shape
						- main idea - to perform different action upon clicking different part of the image
						- eg - <img src="workplace.jpg" alt="Workplace" usemap="#workmap">

									<map name="workmap">
										<area shape="rect" coords="34,44,270,350" alt="Computer" href="computer.htm">
										<area shape="rect" coords="290,172,333,250" alt="Phone" href="phone.htm">
										<area shape="circle" coords="337,300,44" alt="Coffee" href="coffee.htm">
									</map>
						- the usemap value starts with "#" followed by the name of the map
						- here the shape attribute represents the shape of the object being marked (rect - rectangle,circle - circle,poly - polygon,default - entire region)
						- coords - coordinates of the shape
						         - in rect, coords are the extreme points of the diagonal
										 - in circle, coords are the center and radius of the circle
										 - in polygon, coords are the points of the polygon(different points on the shape are selected and straightline contianing joining them forms the desired shape)
						- image map and js - 
						         - clickable area can also trigger some js function
										 - eg - <map name="workmap">
										 					<area shape="rect" coords="34,44,270,350" alt="Computer" href="computer.png" onclick="func()">
														</map>
														<script>
															function func(){
																alert("hello");
															}
														</script>
		Image Background - used to set image as background on element and entire page
		        - on element - use <style> and add css property "background-image" to it(eg - <p style="background-image: url('img_girl.jpg');">)
												 - can also specify the element in <style> inside <head>(<style>
																																									p {
																																										background-image: url('img_girl.jpg');
																																									}
																																									</style>)
						- on entire page - specify the same in <body> 
												 - eg - <style>
																body {
																	background-image: url('img_girl.jpg');
																}
																</style>
						- background repeat - by default, if the size of image is smaller than the size of the element thent he image will repeat itself until it covers the entire element
												 - to prevent this, use "background-repeat" property in css and put its value to "no repeat"
												 - if you want tot cover element fully with the image and maintain the aspect ratio of the image - set background-size property to "cover"
												 - if you want to make sure entire element is always covered with image - set background-attachment to "fixed"
												 - if you want to strech the image to fully cover the element - set background-size property to "100%100%"
						- <picture> element - allows youto specify different images for different screen sizes
						             - it gives developer more flexibility in specifying resources
												 - contains one or more <source> element (each specifying to different images through "srcset")
												 - this source element allows browser to select the most appropriate image according to the current view or device
												 - souce also contains a "media" attribute that defines when this source image is to be choosen for display
												 - contains one <img> element just before closing the </picture> to add default behaviour when either none of the source works
												 - eg - <picture>
																	<source media="(min-width: 650px)" srcset="img_food.jpg">
																	<source media="(min-width: 465px)" srcset="img_car.jpg">
																	<img src="img_girl.jpg">
																</picture>
												 - when to use - 
												 			- bandwidth - when using smal scren its unneccessary to load large image
																					- browser will use the first source with the matching attribute value
															- format support - allow to specify any format that the browser can support

HTML FAVICON - refers to the small image displayed next to the title int he titlebar of the browser
						- typically the website logo
						- can be added in 2 ways
												- using <link> element in <head>(eg - <link rel="icon" href="favicon.ico">)
												- using <meta> element in <head>(eg - <meta name="msapplication-TileColor" content="#da532c">)
						- favicon can be create at - www.favicon.cc 
						- can be either saved in the root directory or in images forled in root directory
						- can be of any format - .ico, .png, .gif, .jpg
						- can be of any size - but recommended size is 16x16 pixels

HTML PAGE TITLE - every webpage should have a title that describe the meaning of the webpage
						- can be added using <title> element in <head>
						- can be used to set the title of the tab or page in the browser
						- shown in web browsers title bar
						- importance - 
												1. important for search engine optimization(SEO)[i.e. its text is used by search engine algo to decide the order when listing the pages in search result]
												2. used by browser to display the title of the page in the tab
												3. provides title for the page when added to favourites
						- must be accurate and meaningful

HTML TABLE - used to display data in tabular format
						- can be added using <table> element
						- contains <tr> element to define the table row
						- contains <td> element to define the table data
						- contains <th> element to define the table header
						- contains <thead> element to define the table header
						- contains <tbody> element to define the table body
						- contains <tfoot> element to define the table footer
						- contains <caption> element to define the table caption
						- eg - <!DOCTYPE html>
										<html>
										<style>
										table, th, td {
											border:1px solid black;
										}
										</style>
										<body>
										<table>
												<caption>Employee Information</caption>
												<colgroup>
													<col style="background-color: #f2f7d2;">
													<col style="background-color: #e6f7e6;">
												</colgroup>
												<thead>
													<tr>
														<th>ID</th>
														<th>Name</th>
														<th>Department</th>
													</tr>
												</thead>
												<tbody>
													<tr>
														<td>1</td>
														<td>Alice</td>
														<td>Engineering</td>
													</tr>
												</tbody>
												<tfoot>
													<tr>
														<td colspan="3">End of Employee Information</td>
													</tr>
												</tfoot>
											</table>
										</body>
										</html>
		Table Border - to add border to the table css border properties are used on table,th and td 
						- eg -  table,th,td{
											border:1px solid black;
										} 
						- to avoid double borders use border-collapse: collapse
						- for round borders - add css property border-radius: 2px blue 
						- if you collapse border after applying radius then also the border will remain square
						- if you dont want the outer boder just do onlt for th and td
						- styling - 
								 - border-style - used to set what type of border you want(values: dotted,dashed,solid,double,grove,rigid,inset,outset,none,hidden)
								 - border-width - used to set the width of the border
								 - border-color - used to set the color of the border
		Table Size - can have different sizes for diff column, row, or entire column
						- use style attribute - width and height
						- width - given in %(as to what % of the parent element's width)
						- height - given in px(given for each row)
		Table Header - tables can have header for each column/row or for many col/row
						- for vertical tab headers - define 1st column of every row as <th>
						- for horizontal tab headers - define 1st full row as <th>
						- alignment - default(bold and  center), can be changed through css text-align:left/right
						- header for mltiple columns - use colspan on <th> with value-> no of columns to be merged
		Table Caption - ads caption that serves are heading for entire table using <caption> just after <table>
						- caption can be aligned using css text-align
		Padding and Spacing - refers to modify different spaces in the table
						- padding - space between content and border (default:0)
						          - change by css using padding:123px
											- different paddings - [padding-top,padding-bottom,padding-left,padding-right]
						- spacing - space between cells(default:0)
											- can be specified inside <table> using border-spacing:20px
						- colspan - used on <th> or <td> to merge columns (using collspan:"no.of columns to be merged")
						- rowspan - used on <th> or <td> to merge rows (using rowspan:"no.of rows to be merged")[specified incolumn from where merging is to be started]
		Table Styling - refers to styling ofthe table elements
						- zebra strips - when you want to color every other row use selector - :nth-child(even/odd)
											- for vertical specify it as td:nth-child() for horizontal as tr:nth-child()
											- for combining and using overlapping effect specify both and inside user RGBA colors
						- horizontal divider - specifying border only at the bottom , do "border-bottom: 1px blue" inside <tr>
						- vertical divider - specifying border only at the left , do "border-left"
						- hover highlighte - for highligting row when mouse hovers above it , use :hover on <tr> as tr:hover{background-color:pink}
		Table colgroup - used to style columns by grouping them together
						- <colgroup> should be used as container tag for col specification and each group is specified using <col>
						- <colgroup> specified after <table> just after the <caption> if it exists
						- has attributes where "span" specifies no of adjusent columns which are grouped together and "style" specifies what specification that group will have
						- <colgroup> can contain multiple <col> statements
						- css properties available for this - [width,visibility,background,border]
						- when you want to skip some rows and specify the afterward ones , just specify the span attribute for the columns to be skipped
						- when you wish to hide certain columns use "visibility: collapse"
						- eg - <table>
										<colgroup>
											<col span="2">
											<col span="3" style="visibility: collapse">
										</colgroup>

HTML LISTS - allows you to group a set of related items in a list
		Types of lists - 
					 	- ordered - list is marked with some number/alphabets/roman number
											- defined by <ol> and list items are defined by <li>
											- list items can be numbered using "type" attribute [ eg - type="1",type="a",type="A",type="I",type="i"]
											- list items can be numbered using "start" attribute [ eg - start="5"](used when you dont want to start from 1 which is default behaviour)
											- list items can be numbered using "reversed" attribute inside <ol>(without value)
											- nested list - <ol>
																				<li>item1</li>
																				<li>item2
																					<ol>
																						<li>item1</li>
																						<li>item2</li>
																					</ol>
																				</li>
																			</ol>
						- unordered - list marked with some sort of shape
											- defined by <ul> and list items are defined by <li>
											- list items can be numbered using "type" attribute [ values can be - desc,circle,square,none]
											- for horizontal list (typically used for navigation menu) style it using "float:right/left" inside <li>
											- nested list - <ul>
																				<li>item1</li>
																				<li>item2	
																					<ul>
																						<li>item1</li>
																						<li>item2</li>
																					</ul>
																				</li>
																			</ul>
						- description - consists of lists of terms with their descriptions
											- defined by <dl> and list items are defined by <dt> [term] and <dd> [description]

HTML BLOCK AND INLINE - every element has a default display value depending upon what typw of element it is 
		Two most common -
						- block - takes up the full width available and starts on a new line
											- <p>,<div>,<h1>..<h6>,<address>,<footer>,<main>,<section>,<form>,<nav>,<article>,<table>,<ol>,<ul>,<li>,<dl>,<dt>,<dd>,<noscript>,<fieldset>,<header>,<canvas>,<hr>,<pre>,<video>,<blockquote>,<aside>
											- <span> is used to group inline elements
						- inline - takes up only as much width as required and does not start on a new line
											- <a>,<abbr>,<acronym>,<b>,<bdo>,<big>,<br>,<button>,<cite>,<code>,<dfn>,<em>,<i>,<img>,<input>,<kbd>,<label>,<map>,<object>,<output>,<q>,<samp>,<script>,<select>,<small>,<span>,<strong>,<sub>,<sup>,<textarea>,<time>,<tt>,<var>
											- <div> is used to group block elements

HTML DIV ELEMENT - ofter used as container for all other elements
						- <div> is a block element and often used to group section of webpage together 
						- <div> is used to group block elements
						- has norequired attribute but style,class,id
						- when used together with css can be used to design a block of content
						- if you have div element thats not 100% wide you can align it to center using "margin:auto" in css
		Multiple div elements - we can have as many div elements as we desired
						- for horizontal devision i.e. one on the top of other use <div> only
						- for vertical devision i.e. one beside other we have several methods - 
											- float - not originally meant to align div but can be used 
															- allows element to float to left/right/center
															- eg -  <style>
																			.mycontainer {
																				width:100%;
																				overflow:auto;
																			}
																			.mycontainer div {
																				width:33%;
																				float:left;
																			}
																			</style>
											- inline-block - it means to chenge div's default block property to inline
											    		- no longer allow element to add line break and will be displayed side by side
															- eg -  <style>
																			.mycontainer {
																				width:100%;
																				overflow:auto;
																				}
																			.mycontainer div {
																				width:33%;
																				display:inline-block;
																				}
																			</style>
											- flexbox - it is a new way to lay out elements in a container
															- CSS Flexbox Layout module was interduced to make it easier to design flexible responsive layouts without using float and postioning
															- it is a one-dimensional layout model, only horizontal or vertical direction is supported
															- to make this method work, sorround <div> with other <div> and give it a status as flex container
															- eg -  <!DOCTYPE html>
																			<html>
																			<head>
																			<style>
																			.mycontainer {
																				display: flex;
																			}
																			.mycontainer > div {
																				width:33%;
																			}
																			</style>
																			</head>
																			<body>

																			<h1>Flexbox Example</h1>

																			<p>Align three DIV elements side by side.</p>

																			<div class="mycontainer">

																				<div style="background-color:#FFF4A3;">
																					<h2>London</h2>
																				</div>
																				
																				<div style="background-color:#FFC0C7;">
																					<h2>Oslo</h2>
																				</div>
																				
																				<div style="background-color:#D9EEE1;">
																					<h2>Rome</h2>
																				</div>

																			</div>
																			</body>
																			</html>
											- grid - offers grid based output layout system with rows and columns
											- it is a two-dimensional layout model, both horizontal and vertical direction is supported
											- almost same as flex but has ability to define more than one row and position each rows individually
											- to make this method work, sorround <div> with other <div> and give it a status as grid container ad also specify width of each column
											- eg -  <!DOCTYPE html>
															<html>
															<head>
															<style>
															.grid-container {
																display: grid;
																grid-template-columns: 33% 33% 33%;
															}
															</style>
															</head>
															<body>

															<h1>Grid Example</h1>

															<p>Align three DIV elements side by side.</p>

															<div class="grid-container">

															<div style="background-color:#FFF4A3;">
																<h2>London</h2>
																<p>London is the capital city of England.</p>
																<p>London has over 13 million inhabitants.</p>
															</div>

															<div style="background-color:#FFC0C7;">
																<h2>Oslo</h2>
																<p>Oslo is the capital city of Norway.</p>
																<p>Oslo has over 600.000 inhabitants.</p>
															</div>

															<div style="background-color:#D9EEE1;">
																<h2>Rome</h2>
																<p>Rome is the capital city of Italy.</p>
																<p>Rome has almost 3 million inhabitants.</p>
															</div>

															</div>

															</body>
															</html>

HTML CLASSES - used to specify class for an html element
						 - often used to point to a class anme in style sheets
						 - can be used to style different elements
						 - can be used by any html element
						 - syntax - specified with ".class_name" and properties are defined in {}
						 - access - <element_name class="class_name">
						 - eg - <!DOCTYPE html>
										<html>
										<head>
										<style>
										.city {
											background-color: tomato;
											color: white;
											padding: 10px;
										}
										</style>
										</head>
										<body>
										<h2 class="city">London</h2>
										<p>London is the capital of England.</p>
										</body>
										</html>
						 - same class can be used by different html elements 
						 - if you want to specify different classes in same element then separate them with " " like <element_name class="name1 name2">  
						 - also used by javascript to perform task on certain elements based on the class they use
						 - js can access elements with a specific class name by using getElementsByClassName() method - eg -
						                <script>
														function myFunction() {
															var x = document.getElementsByClassName("city");
															for (var i = 0; i < x.length; i++) {
																x[i].style.display = "none";
															}
														}
														</script> 

HTML ID - used to specify unique id for an HTML element
				- cannot have more than 1 element with same id i.e. must be unique
				- used t point to a specific style declaration in the stylesheet
				- different from class , as class can be accessed by any no of elment but thats not the case here
				- syntax - specified with "#" and properties are defined in {}
				- access - <element_name id="id_name">
				- eg -  <!DOCTYPE html>
								<html>
								<head>
								<style>
								#myHeader {
									background-color: lightblue;
									color: black;
									padding: 40px;
									text-align: center;
								}
								</style>
								</head>
								<body>

								<h1 id="myHeader">My Header</h1>

								</body>
								</html>
		Class name rules - 
				- case sensitive
				- must not start with number
				- can contain letters, numbers, hyphens, underscores
				- must not contain whitespaces, spaces,tabs ,etc.
				- must not contain any special characters
				- must not contain any symbols
		bookmark with id - allows user to jump to specific part of webpage 
		    - useful when page very long
				- first create book mark and then add link to it
				- eg - <h2 id="C4">Chapter 4</h2>
							 <a href="#C4">Jump to Chapter 4</a>
		Using id in JS - js can access element based on id by getElementsById()
				- eg -  <script>
								function displayResult() {
									document.getElementById("myHeader").innerHTML = "Have a nice day!";
								}
								</script>